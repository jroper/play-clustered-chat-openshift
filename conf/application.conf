# https://www.playframework.com/documentation/latest/Configuration
play.http.secret.key=foo

play.application.loader = modules.MyApplicationLoader

play.engine-io {

  # The router name. This tells play-engine.io to use a router with this name,
  # which is configured below.
  router-name = "engine.io-router"
}

akka {
  actor {

    # Enable clustering
    provider = "cluster"

    deployment {

      # This actor path matches the configured play.engine-io.router-name above.
      "/engine.io-router" {

        # We use a consistent hashing group.
        router = consistent-hashing-group

        # This is the default path for the engine.io manager actor.
        # If you've changed that (via the play.engine-io.actor-name setting),
        # then this must be updated to match.
        routees.paths = ["/user/engine.io"]

        cluster {
          enabled = on
          allow-local-routees = on
        }
      }
    }

    # Chat event serializer config
    serializers.chat-event = "chat.ChatEventSerializer"
    serialization-bindings {
      "chat.ChatMessage" = chat-event
      "chat.JoinRoom" = chat-event
      "chat.LeaveRoom" = chat-event
    }
    serialization-identifiers {
      # "chat".hashCode
      "chat.ChatEventSerializer" = 3052376
    }
  }

  management {

    cluster.bootstrap {
      contact-point-discovery {
        service-name = "play-clustered-chat"
        discovery-method = akka.discovery.kubernetes-api
        required-contact-point-nr = ${REQUIRED_CONTACT_POINT_NR}
      }
    }

    http.bind-hostname = "0.0.0.0"
  }

  remote {
    enabled-transports = [akka.remote.netty.ssl]
    netty.ssl {
      security {
        key-store = ${KEYSTORE_JKS}
        trust-store = ${TRUSTSTORE_JKS}

        key-store-password = ${JKS_PASSWORD}
        key-password = ${JKS_PASSWORD}
        trust-store-password = ${JKS_PASSWORD}

        protocol = "TLSv1.2"

        enabled-algorithms = [TLS_DHE_RSA_WITH_AES_128_GCM_SHA256]
      }
    }
  }
}

play.server.dir = "/tmp"
